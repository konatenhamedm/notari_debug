{% from '_admin/macros/fichier.html.twig' import list_document %}
{% block style %}
<style>
    .sw-theme-dots>ul.step-anchor>li.done>a:after {
        background: green;
    }
    .sw-theme-dots>ul.step-anchor>li.active>a:after {
        background: orangered;
    }
    .sw-theme-dots>ul.step-anchor>li>a:after {
        background: grey;
    }


    /*progressbar*/
#progressbar {
	margin-bottom: 30px;
	overflow: hidden;
	/*CSS counters to number the steps*/
	counter-reset: step;
}
#progressbar li {
	list-style-type: none;
	color: white;
	text-transform: uppercase;
	font-size: 9px;
	width: 33.33%;
	float: left;
	position: relative;
}
#progressbar li:before {
	content: counter(step);
	counter-increment: step;
	width: 20px;
	line-height: 20px;
	display: block;
	font-size: 10px;
	color: #333;
	background: white;
	border-radius: 3px;
	margin: 0 auto 5px auto;
}
/*progressbar connectors*/
#progressbar li:after {
	content: '';
	width: 100%;
	height: 2px;
	background: white;
	position: absolute;
	left: -50%;
	top: 9px;
	z-index: -1; /*put it behind the numbers*/
}
#progressbar li:first-child:after {
	/*connector not needed before the first step*/
	content: none;
}
/*marking active/completed steps green*/
/*The number of the step and the connector before it = green*/
#progressbar li.active:before,  #progressbar li.active:after{
	background: #27AE60;
	color: white;
}

</style>
{% endblock %}
{% block page_content %}
    {# {% form_theme form 'widget/fields-block.html.twig' %}#}
    <div class="modal-header ">
        <h5 class="modal-title" >DETAILS-{{ titre | upper  }}
        </h5>
        <button class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    {% form_theme form 'widget/fields-block.html.twig' %}
    {{ form_start(form, {'attr': {'role':'form', 'class': 'form'}}) }}
    <div class="modal-body">
        <div id="list-document" data-prototype="{{ list_document(form.documentCourriers.vars.prototype, 1)|e }}"></div>
        {# {{ include('includes/ajax/response.html.twig') }} #}
        <div class="contenu" style="margin-top: -10px">
            <div class="row">
                <div class="form-group col-md-6 ">
                    <label class="sr-onl" for="userinput1">Date de réception</label>
                    {{ form_widget(form.dateReception,{'attr':{'class':'form-control border-primary','id':'userinput1','placeholder':'NOM','required':'required'}}) }}
                    {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                </div>
                <div class="form-group col-md-6">
                    <label class="sr-onl" for="userinput1">N d'enregistrement</label>
                    {{ form_widget(form.numero,{'attr':{'class':'form-control border-primary','id':'userinput1','placeholder':'Numero'}}) }}
                    {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                </div>


            </div>
            <div class="row">
                <div class="form-group col-md-12 ">
                    <label class="sr-onl" for="userinput1">Rangement</label>
                    {{ form_widget(form.rangement,{'attr':{'class':'form-control border-primary','id':'userinput1','placeholder':'rangement'}}) }}
                    {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                </div>

            </div>
            <div class="row">
                <div class="form-group col-md-12 ">
                    <label class="sr-onl" for="userinput1">Objet</label>
                    {{ form_widget(form.objet,{'attr':{'class':'form-control border-primary','id':'userinput1','placeholder':'Objet','required':'required'}}) }}
                    {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                </div>
            </div>
            <div >
                <div class="row">
                    <div class="form-group col-md-6 ">
                        <label class="sr-onl" for="userinput1">Expéditeur</label>
                        {{ form_widget(form.expediteur,{'attr':{'class':'form-control border-primary','id':'userinput1','placeholder':'Expéditeur'}}) }}
                        {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                    </div>
                    <div class="form-group col-md-6 arrive">
                        <label class="sr-onl" for="userinput1">Réceptionné par</label>
                        {{ form_widget(form.user,{'attr':{'class':'form-select form-control border-primary','id':'userinput1','placeholder':'Réceptionné par'}}) }}
                        {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                    </div>
                    <div class="form-group col-md-6 autre">
                        <label class="sr-onl" for="userinput1">Réceptionné par</label>
                        {{ form_widget(form.recep,{'attr':{'class':'form-select form-control border-primary','id':'userinput1','placeholder':'Réceptionné par'}}) }}
                        {# <input type="text" id="userinput1" class="form-control border-primary" placeholder="Compte contribuable" name="name">#}
                    </div>


                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="doc-container">
                    <br/>
                    {% for document in form.documentCourriers %}
                        {{ list_document(document) }}
                    {% endfor %}
                </div>
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>

    </div>
    {{ form_widget(form._token) }}
    {{ form_end(form, {render_rest: false}) }}
{% endblock %}
{#{% include 'admin/macros/fichier.html.twig'  %}#}

{% block javascripts %}

    <script>

        $(function () {
            const $container = $('.doc-container');
            var index = $container.find('.row-line').length;

            const $addLink = $('.add-document');
            $addLink.click(function(e) {

                addLine($container);



                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            });
            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            /*if (index == 0) {
            addimputation($container);
            } else {*/
            if (index > 0) {
                $container.children('.row-line').each(function() {
                    const $this = $(this);
                    addDeleteLink($this);
                    $this.find("select").each(function() {
                        const $this = $(this);
                        init_select2($this, null);
                    });




                });
            }


            // La fonction qui ajoute un formulaire Categorie
            function addLine($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var $prototype = $($("#list-document").attr('data-prototype').replace(/__name__label__/g, 'Pièce ' + (index + 1)).replace(/__name__/g, index));
                // On ajoute au prototype un lien pour pouvoir supprimer la prestation
                addDeleteLink($prototype);
                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                $prototype.find("select").each(function() {
                    const $this = $(this);
                    init_select2($this, null);
                });

                index++;
            }


            function addDeleteLink($prototype) {
                // Création du lien
                $deleteLink = $('<a href="#" class="btn btn-danger"><span class="fa fa-trash"></span></a>');
                // Ajout du lien
                $prototype.find(".del-col").append($deleteLink);
                // Ajout du listener sur le clic du lien
                $deleteLink.click(function(e) {
                    const $parent = $(this).closest('.row-line');
                    $parent.remove();


                    if (index > 0) {
                        index -= 1;
                    }

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                });
            }
        });
        $(function () {
            $('.no-auto').each(function () {
                const $this = $(this);
                const $id = $('#' + $this.attr('id'));
                init_date_picker($id,  'down', (start, e) => {
                    //$this.val(start.format('DD/MM/YYYY'));
                }, null, null, false);

                $id.on('apply.daterangepicker', function (ev, picker) {
                    $(this).val(picker.startDate.format('DD/MM/YYYY'));
                });
            });
        });
        $(document).ready(function () {
            $('#courier_arrive_etat').hide();
            $('.existe').remove();
            $('.autre').hide();
            var check = $(".checkbox").get(0).checked;


            if (check === true) {
                $('#principal .mot').html('Décochez cette option pour une numérotation personnalisée');
                $('#courier_arrive_numero').attr('readonly', true)
            }else {
                $('#principal .mot').html('Ccochez cette option pour une numérotation automatque');
            }

            $(".checkbox").change(function (e) {
                const $this = $(this);
                var mot = $('#principal #p2 .mot')


                var res = this.closest('.card-body');
                if (this.checked) {
                    $.ajax({
                        url: '/admin/existe',
                        type: 'get',
                        dataType: 'json',
                        success: function (response, status) {
                            $('#principal .mot').html('Décochez cette option pour une numérotation personnalisée');
                            $('#courier_arrive_numero').val(response.nom)
                            $('#courier_arrive_numero').attr('readonly', true)
                            //console.log(response.nom);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
                if (this.checked === false) {
                    $('#courier_arrive_numero').val('')
                    $('#principal .mot').html('Cochez cette option pour une numérotation automatique');
                    $('#courier_arrive_numero').attr('readonly', false)
                }
            });
        })


    </script>
{% endblock %}